<?php

include 'dbConnect.php';
$sql = "INSERT INTO course (CourseID, Description)
    VALUES
        ('CMSC 11','This is a 3-unit course that will discuss about Computer Science using Python Programming Language, one of the emerging programming language nowadays. The student will engage in different logical problems that requires critical thinking. Also, the student will learn different programming techniques in Python and solve real- world problems and tasks with the use of the technology.'),
        ('MATH 18','In this course, we will cover some preliminary topics on the real number system and properties of the set of real numbers. We will then discuss algebraic and transcendental functions, systems of equations and inequalities, and the conics and other plane curves. The detailed outline of topics is presented on the next page of this guide. This course might have a long coverage but studying all these topics will be of great help in building a strong foundation in basic mathematical skills. Not only it will equip you with essential arithmetic skills, but also it will help you hone your critical thinking and problem-solving abilities by applying your learning in some real-world scenarios.'),
        ('CMSC 56','Principles of logic, set theory, relations and functions; Boolean algebra; matrices'),
        ('CMSC 21','Expansion and development of material introduced in CMSC 11. Processing of files and linked-lists; Programming in the C language; Recursion; Systematic program development; Top-down design and program verification. 3 units (2 lec, 3 lab).'),
        ('CMSC 57','Discrete Mathematical Structures in Computer Science II. Principles of combinatorics, probability, algebraic systems, and graph theory'),
        ('MATH 53','MATH 53 is the first in the calculus series of three courses. It focuses on limits and continuity; differentiation; derivatives of algebraic and trigonometric functions; applications of derivatives; extrema of functions; optimizations; antidifferentiation; definite integrals; and applications of integrals.'),
        ('CMSC 22','This course includes the fundamentals of object-oriented programming (objects, classes, abstraction, encapsulation, inheritance, and polymorphism), particularly using the Java programming language. The course starts with introductory concepts and progresses to touch on advanced topics, as well as the application of acquired skills in object-oriented programming into the real world.'),
        ('CMSC 123','This course will tackle all about different abstract data types (ADT) and how to implement them using different data structures (such as arrays, lists, trees, etc.). First, we will learn about Linear ADTs where the data follows a certain order. Examples of these are stacks, queues, deques, vectors, linked lists, sequences, and iterators. Next, if there are Linear then there are Non-Linear ADTs where the flow is not straightfoward. Some examples are maps, dictionaries, hash tables, skip lists, binary trees, priority queues, heaps, and binary search trees. Finally, we will tackle some algorithms for pattern matching, sorting searching, selection, and graph applications. We will also be introduced to algorithm analysis, which allows us to compare the performances of different implementations of ADTs.'),
        ('MATH 54','In this course, you will learn about integration, which you can think of as the inverse process for differentiation. You will also learn about the significance of the integral, what it represents, its applications and the different techniques you can use to calculate it. After this, you will investigate sequences and series, the different convergence tests and the Taylor and Maclaurin series, all of which will allow us to approximate definite integrals and create new functions. You will then learn about expressing curves using parametric equations or polar coordinates, and how to differentiate and integrate these functions. Finally, you will learn about vectors and three-dimensional space as a preparation for Math 55.'),
        ('CMSC 124','This course covers the fundamental concepts in the design and implementation of current high-level programming languages; syntax and translation; language definition structures; elementary and structured data types; abstraction mechanisms; sequence and data control; and run time considerations.'),
        ('CMSC 131','This course is an introduction to computer organization and interfaces between hardware and software. This course is intended to teach students how to program a computer or microprocessor based system in processor-specific assembly language. The course also teaches the importance and practice of integrating assembly with higher-level languages for computer programming.'),
        ('CMSC 141','Automata and Languages Theory'),
        ('CMSC 128','This course introduces students to the discipline of web programming including the methods and techniques used in web-based system development.'),
        ('CMSC 134','Foundations of human interaction; interaction design basics; HCI in the software process; cognitive models and theories; applications of concepts and methodologies of software engineering, human factors, and psychology to address ergonomic, cognitive, and social factors in the design and evaluation of interactive computer systems.'),
        ('CMSC 125','This course introduces the fundamental concepts and design principles of operating systems. Topics include process management, memory management, file systems, security, and distributed systems. The course will also cover current and emerging topics in operating systems, such as virtualization and cloud computing.')";
$conn->query($sql);
$conn->close();